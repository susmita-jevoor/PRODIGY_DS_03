# -*- coding: utf-8 -*-
"""TASK_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-KF20XeZvVmIbleckF9t81lXd7k4TV05

**PRODIGY INFOTECH INTERNSHIP**

**TASK 3**:Build a decision tree classifier to predict whether a customer will purchase a product or service based on their demographic and behavioral data. Use a dataset such as the Bank Marketing dataset from the UCI Machine Learning Repository.

**DONE BY**: SUSMITA JEVOOR
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier,plot_tree
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder

df=pd.read_csv('bank-full.csv', sep=';')
df

df.head(10)

df.isna().sum()

df.dropna(inplace=True)
df_1=df.drop_duplicates()
df_1.info

#Preprocess the data
X=df.drop('poutcome', axis=1)
y=df['poutcome']
X=pd.get_dummies(X)
X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.2, random_state=42)

#Create the classifier
clf=DecisionTreeClassifier()

#Train the classifier
clf.fit(X_train, y_train)

#Make predictions
y_pred=clf.predict(X_test)

#Calculate accuracy
accuracy=accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

#Visualize the decision tree
plt.figure(figsize=(10,8))
plot_tree(clf,feature_names=list(X.columns), class_names=df['education'].unique().tolist(),filled=True,rounded=True)
plt.show()

#Create the classsifier with pruning enabled
clf=DecisionTreeClassifier(ccp_alpha=0.01)
#Train the classifier
clf.fit(X_train,y_train)
#Make predictions
y_pred=clf.predict(X_test)
#Calculate accuracy
accuracy=accuracy_score(y_test,y_pred)
print("Accuracy:",accuracy)

#Visualize the pruned decision tree
plt.figure(figsize=(10,8))
plot_tree(clf,feature_names=list(X.columns),class_names=df['education'].unique().tolist(),filled=True,rounded=True)
plt.show()